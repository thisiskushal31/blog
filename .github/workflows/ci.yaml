name: Deploy to GitHub Pages and Generate Sitemap

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install yarn
        run: |
          npm install -g yarn

      - name: Install dependencies
        run: |
          # Use yarn as primary package manager (better at handling optional dependencies)
          rm -rf node_modules package-lock.json yarn.lock
          yarn install
          
      - name: Fix rollup binary issue (if needed)
        run: |
          # Yarn should handle this automatically, but let's verify
          echo "Checking rollup installation..."
          
          # If rollup binary is missing, try to fix it
          if [ ! -d "node_modules/@rollup/rollup-linux-x64-gnu" ]; then
            echo "Rollup binary missing, attempting to fix..."
            yarn add @rollup/rollup-linux-x64-gnu --optional || true
          fi

      - name: Verify rollup installation
        run: |
          # Check if rollup is properly installed
          echo "=== Checking rollup installation ==="
          ls -la node_modules/@rollup/ || echo "Rollup not found in @rollup/"
          ls -la node_modules/rollup/ || echo "Rollup not found in rollup/"
          # Verify the specific binary exists
          ls -la node_modules/@rollup/rollup-linux-x64-gnu/ || echo "Rollup linux binary not found"
          
          # Test if rollup can be required
          echo "=== Testing rollup require ==="
          node -e "try { require('rollup'); console.log('Rollup require: SUCCESS'); } catch(e) { console.log('Rollup require: FAILED -', e.message); }" || true
          
          # Check vite can find rollup
          echo "=== Checking vite-rollup integration ==="
          node -e "try { const vite = require('vite'); console.log('Vite require: SUCCESS'); } catch(e) { console.log('Vite require: FAILED -', e.message); }" || true

      - name: Build
        run: yarn build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist

  generate-sitemap:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
      - name: Generate Sitemap from Live Site
        run: |
          npx sitemap-generator-cli https://thisiskushal31.github.io/blog --output ./sitemap.xml --strip-querystring

      - name: Clone gh-pages branch
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git clone --branch gh-pages https://x-access-token:${TOKEN}@github.com/thisiskushal31/blog.git gh-pages-branch

      - name: Copy Sitemap & Push to gh-pages
        run: |
          cd gh-pages-branch
          cp ../sitemap.xml ./sitemap.xml
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add sitemap.xml
          git commit -m "chore: update sitemap [skip ci]" || echo "No changes to commit"
          git push origin gh-pages